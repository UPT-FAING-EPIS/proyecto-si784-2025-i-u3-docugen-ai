CREATE TABLE usuarios (
    id SERIAL,
    correo_electronico VARCHAR(255) NOT NULL,
    contrasena VARCHAR(255) NOT NULL,
    nombre VARCHAR(100),
    apellidos VARCHAR(100),
    nombre_completo VARCHAR(200) GENERATED ALWAYS AS (concat_ws(' ', nombre, apellidos)) STORED,
    url_foto_perfil VARCHAR(2048),
    numero_telefono VARCHAR(50),
    esta_activo BOOLEAN DEFAULT TRUE,
    correo_verificado_en TIMESTAMP NULL,
    ultimo_inicio_sesion_en TIMESTAMP NULL,
    zona_horaria VARCHAR(100) DEFAULT 'UTC',
    idioma VARCHAR(10) DEFAULT 'es',
    creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE proyectos_codigo (
    id SERIAL,
    usuario_id INT NOT NULL,
    nombre_proyecto VARCHAR(255) NOT NULL,
    descripcion TEXT,
    lenguaje_programacion VARCHAR(50),
    contenido_codigo TEXT,
    ruta_almacenamiento_codigo VARCHAR(2048),
    estado_procesamiento VARCHAR(20) DEFAULT 'pendiente' CHECK (estado_procesamiento IN ('pendiente', 'subiendo', 'procesando', 'completado', 'error_subida', 'error_analisis')),
    ultimo_analisis_en TIMESTAMP NULL,
    creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE documentos_generados (
    id SERIAL,
    proyecto_codigo_id INT NOT NULL,
    usuario_id INT NOT NULL,
    tipo_documento VARCHAR(100) NOT NULL,
    formato_salida VARCHAR(20) DEFAULT 'texto_plano' CHECK (formato_salida IN ('texto_plano', 'markdown', 'pdf_url', 'json')),
    contenido_documento TEXT,
    url_documento VARCHAR(2048),
    version VARCHAR(20) DEFAULT '1.0',
    parametros_generacion_json TEXT,
    generado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE conversaciones (
    id SERIAL,
    usuario_id INT NOT NULL,
    titulo VARCHAR(255) DEFAULT 'Nueva Conversación',
    descripcion TEXT,
    estado VARCHAR(20) DEFAULT 'activa' CHECK (estado IN ('activa', 'archivada', 'eliminada')),
    creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabla para almacenar cada mensaje/consulta dentro de una conversación
CREATE TABLE mensajes_conversacion (
    id SERIAL,
    conversacion_id INT NOT NULL,
    usuario_id INT NOT NULL,
    proyecto_codigo_id INT NULL, -- Opcional, si el mensaje está relacionado con un proyecto específico
    documento_generado_id INT NULL, -- Opcional, si el mensaje generó un documento
    tipo_mensaje VARCHAR(20) DEFAULT 'consulta' CHECK (tipo_mensaje IN ('consulta', 'respuesta', 'sistema')),
    contenido_mensaje TEXT NOT NULL,
    metadatos_json TEXT, -- Para almacenar información adicional como tokens usados, tiempo de respuesta, etc.
    orden_en_conversacion INT NOT NULL, -- Para mantener el orden de los mensajes
    creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE contenido_compartido (
    id SERIAL PRIMARY KEY,
    usuario_id INT NOT NULL,
    tipo_contenido VARCHAR(20) NOT NULL CHECK (tipo_contenido IN ('conversacion', 'consulta')),
    conversacion_id INT NULL, -- Para conversaciones completas
    mensaje_id INT NULL, -- Para consultas individuales
    slug VARCHAR(255) UNIQUE NOT NULL, -- URL amigable para compartir
    titulo VARCHAR(255) NOT NULL,
    descripcion TEXT,
    es_publico BOOLEAN DEFAULT TRUE,
    vistas INT DEFAULT 0,
    compartido_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT fk_compartido_usuario
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE,
    
    CONSTRAINT fk_compartido_conversacion
    FOREIGN KEY (conversacion_id) REFERENCES conversaciones(id) ON DELETE CASCADE,
    
    CONSTRAINT fk_compartido_mensaje
    FOREIGN KEY (mensaje_id) REFERENCES mensajes_conversacion(id) ON DELETE CASCADE
);




ALTER TABLE usuarios ADD PRIMARY KEY (id);

ALTER TABLE proyectos_codigo ADD PRIMARY KEY (id);

ALTER TABLE documentos_generados ADD PRIMARY KEY (id);

-- Agregar claves primarias
ALTER TABLE conversaciones ADD PRIMARY KEY (id);
ALTER TABLE mensajes_conversacion ADD PRIMARY KEY (id);




ALTER TABLE proyectos_codigo
ADD CONSTRAINT fk_proyecto_usuario
FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE;

ALTER TABLE documentos_generados
ADD CONSTRAINT fk_documento_proyecto
FOREIGN KEY (proyecto_codigo_id) REFERENCES proyectos_codigo(id) ON DELETE CASCADE;

ALTER TABLE documentos_generados
ADD CONSTRAINT fk_documento_usuario
FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE;

ALTER TABLE conversaciones
ADD CONSTRAINT fk_conversacion_usuario
FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE;

ALTER TABLE mensajes_conversacion
ADD CONSTRAINT fk_mensaje_conversacion
FOREIGN KEY (conversacion_id) REFERENCES conversaciones(id) ON DELETE CASCADE;

ALTER TABLE mensajes_conversacion
ADD CONSTRAINT fk_mensaje_usuario
FOREIGN KEY (usuario_id) REFERENCES usuarios(id) ON DELETE CASCADE;

ALTER TABLE mensajes_conversacion
ADD CONSTRAINT fk_mensaje_proyecto
FOREIGN KEY (proyecto_codigo_id) REFERENCES proyectos_codigo(id) ON DELETE SET NULL;

ALTER TABLE mensajes_conversacion
ADD CONSTRAINT fk_mensaje_documento
FOREIGN KEY (documento_generado_id) REFERENCES documentos_generados(id) ON DELETE SET NULL;

-- Índices para mejorar el rendimiento
CREATE INDEX idx_conversaciones_usuario ON conversaciones(usuario_id);
CREATE INDEX idx_conversaciones_estado ON conversaciones(estado);
CREATE INDEX idx_mensajes_conversacion ON mensajes_conversacion(conversacion_id);
CREATE INDEX idx_mensajes_orden ON mensajes_conversacion(conversacion_id, orden_en_conversacion);

CREATE INDEX idx_contenido_compartido_slug ON contenido_compartido(slug);
CREATE INDEX idx_contenido_compartido_tipo ON contenido_compartido(tipo_contenido);
CREATE INDEX idx_contenido_compartido_publico ON contenido_compartido(es_publico);


ALTER TABLE conversaciones ADD COLUMN es_compartida BOOLEAN DEFAULT FALSE;
ALTER TABLE mensajes_conversacion ADD COLUMN es_compartido BOOLEAN DEFAULT FALSE;